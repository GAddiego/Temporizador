/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import com.jtattoo.plaf.aluminium.AluminiumLookAndFeel;
import com.jtattoo.plaf.hifi.HiFiLookAndFeel;
import control.Control;
import control.Checker;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.plaf.multi.MultiLookAndFeel;
import javax.swing.plaf.synth.SynthLookAndFeel;
import language.Language;

/**
 *
 * @author Gonzalo
 */
public class NewJFrame extends javax.swing.JFrame {

    Control control;
    boolean forced;

    public NewJFrame() {
        initComponents();
        setLocationRelativeTo(null);
        buttonGroupLanguages.add(jRadioButtonSpanish);
        buttonGroupLanguages.add(jRadioButtonEnglish);
        changeLanguage(SPANISH);
        control = new Control(this);

        jTextFieldHour.setText(String.valueOf(control.getHours()));
        jTextFieldMinute.setText(String.valueOf(control.getMinutes()));
        jTextFieldRemainingTime.setText("--:--");

        setJTexFieldChanged(jTextFieldMinute);

//        //Adding the verifiers, user can only write integers in the textfields
//        jTextFieldHour.setInputVerifier(new Checker());
//        jTextFieldMinute.setInputVerifier(new Checker());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupLanguages = new javax.swing.ButtonGroup();
        jScrollBar1 = new javax.swing.JScrollBar();
        jPanelPrincipal = new javax.swing.JPanel();
        jPanelTitle = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanelButtons = new javax.swing.JPanel();
        jButtonCancel = new javax.swing.JButton();
        jButtonShutdown = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jPanelLanguage = new javax.swing.JPanel();
        jLabelLanguage = new javax.swing.JLabel();
        jRadioButtonEnglish = new javax.swing.JRadioButton();
        jRadioButtonSpanish = new javax.swing.JRadioButton();
        jPanelTimeNow = new javax.swing.JPanel();
        jLabelMinute = new javax.swing.JLabel();
        jButtonPlus10Minutes = new javax.swing.JButton();
        jButtonPlus5Minutes = new javax.swing.JButton();
        jButtonPlusOneMinute = new javax.swing.JButton();
        jTextFieldMinute = new javax.swing.JTextField();
        jButtonLessOneMinute = new javax.swing.JButton();
        jButtonCurrentTime = new javax.swing.JButton();
        jButtonLessOneHour = new javax.swing.JButton();
        jButtonPlusOneHour = new javax.swing.JButton();
        jLabelHour = new javax.swing.JLabel();
        jTextFieldHour = new javax.swing.JTextField();
        jLabelRemainingTime = new javax.swing.JLabel();
        jTextFieldRemainingTime = new javax.swing.JTextField();
        jCheckBoxForzar = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(500, 320));
        setMinimumSize(new java.awt.Dimension(500, 320));
        setPreferredSize(new java.awt.Dimension(500, 320));
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanelPrincipal.setMaximumSize(getPreferredSize());
        jPanelPrincipal.setMinimumSize(getPreferredSize());
        jPanelPrincipal.setOpaque(false);
        jPanelPrincipal.setPreferredSize(getPreferredSize());
        jPanelPrincipal.setLayout(new java.awt.GridBagLayout());

        jPanelTitle.setMaximumSize(new java.awt.Dimension(690, 465));
        jPanelTitle.setLayout(new javax.swing.BoxLayout(jPanelTitle, javax.swing.BoxLayout.Y_AXIS));

        jLabelTitle.setText("Titulo");
        jPanelTitle.add(jLabelTitle);
        jPanelTitle.add(jSeparator1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 17, 0);
        jPanelPrincipal.add(jPanelTitle, gridBagConstraints);

        jPanelButtons.setMaximumSize(new java.awt.Dimension(690, 465));
        jPanelButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 5));

        jButtonCancel.setText("Cancelar");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonCancel);

        jButtonShutdown.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonShutdown.setText("Apagar");
        jButtonShutdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShutdownActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonShutdown);

        jButtonReset.setText("Reiniciar");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });
        jPanelButtons.add(jButtonReset);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelPrincipal.add(jPanelButtons, gridBagConstraints);

        jPanelLanguage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jPanelLanguage.setLayout(new javax.swing.BoxLayout(jPanelLanguage, javax.swing.BoxLayout.Y_AXIS));

        jLabelLanguage.setText("Idioma:");
        jPanelLanguage.add(jLabelLanguage);

        jRadioButtonEnglish.setText("Inglés");
        jRadioButtonEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEnglishActionPerformed(evt);
            }
        });
        jPanelLanguage.add(jRadioButtonEnglish);

        jRadioButtonSpanish.setSelected(true);
        jRadioButtonSpanish.setText("Español");
        jRadioButtonSpanish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSpanishActionPerformed(evt);
            }
        });
        jPanelLanguage.add(jRadioButtonSpanish);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 19, 0, 12);
        jPanelPrincipal.add(jPanelLanguage, gridBagConstraints);

        jPanelTimeNow.setMaximumSize(new java.awt.Dimension(690, 465));
        jPanelTimeNow.setOpaque(false);
        jPanelTimeNow.setLayout(new java.awt.GridBagLayout());

        jLabelMinute.setText("Minute");
        jLabelMinute.setMaximumSize(new java.awt.Dimension(36, 16));
        jLabelMinute.setMinimumSize(new java.awt.Dimension(36, 16));
        jLabelMinute.setPreferredSize(new java.awt.Dimension(42, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        jPanelTimeNow.add(jLabelMinute, gridBagConstraints);

        jButtonPlus10Minutes.setText("+10");
        jButtonPlus10Minutes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlus10MinutesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        jPanelTimeNow.add(jButtonPlus10Minutes, gridBagConstraints);

        jButtonPlus5Minutes.setText("+5");
        jButtonPlus5Minutes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlus5MinutesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        jPanelTimeNow.add(jButtonPlus5Minutes, gridBagConstraints);

        jButtonPlusOneMinute.setText("+");
        jButtonPlusOneMinute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlusOneMinuteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        jPanelTimeNow.add(jButtonPlusOneMinute, gridBagConstraints);

        jTextFieldMinute.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldMinute.setText("jTextField1");
        jTextFieldMinute.setMaximumSize(new java.awt.Dimension(70, 22));
        jTextFieldMinute.setMinimumSize(new java.awt.Dimension(70, 22));
        jTextFieldMinute.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldMinuteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldMinuteFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelTimeNow.add(jTextFieldMinute, gridBagConstraints);

        jButtonLessOneMinute.setText("-");
        jButtonLessOneMinute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLessOneMinuteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        jPanelTimeNow.add(jButtonLessOneMinute, gridBagConstraints);

        jButtonCurrentTime.setText("Hora actual");
        jButtonCurrentTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCurrentTimeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 7, 0);
        jPanelTimeNow.add(jButtonCurrentTime, gridBagConstraints);

        jButtonLessOneHour.setText("-");
        jButtonLessOneHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLessOneHourActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        jPanelTimeNow.add(jButtonLessOneHour, gridBagConstraints);

        jButtonPlusOneHour.setText("+");
        jButtonPlusOneHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlusOneHourActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        jPanelTimeNow.add(jButtonPlusOneHour, gridBagConstraints);

        jLabelHour.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelHour.setText("Hora");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        jPanelTimeNow.add(jLabelHour, gridBagConstraints);

        jTextFieldHour.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldHour.setText("jTextField1");
        jTextFieldHour.setMaximumSize(new java.awt.Dimension(70, 22));
        jTextFieldHour.setMinimumSize(new java.awt.Dimension(70, 22));
        jTextFieldHour.setName(""); // NOI18N
        jTextFieldHour.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldHourFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldHourFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelTimeNow.add(jTextFieldHour, gridBagConstraints);

        jLabelRemainingTime.setText("Tiempo restante:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(16, 0, 8, 8);
        jPanelTimeNow.add(jLabelRemainingTime, gridBagConstraints);

        jTextFieldRemainingTime.setEditable(false);
        jTextFieldRemainingTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldRemainingTime.setText("tiempo restante");
        jTextFieldRemainingTime.setEnabled(false);
        jTextFieldRemainingTime.setMaximumSize(new java.awt.Dimension(97, 22));
        jTextFieldRemainingTime.setMinimumSize(new java.awt.Dimension(97, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.insets = new java.awt.Insets(16, 0, 8, 0);
        jPanelTimeNow.add(jTextFieldRemainingTime, gridBagConstraints);

        jCheckBoxForzar.setText("Forzar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        jPanelTimeNow.add(jCheckBoxForzar, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanelPrincipal.add(jPanelTimeNow, gridBagConstraints);

        getContentPane().add(jPanelPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEnglishActionPerformed
        jRadioButtonSpanish.setSelected(false);
        if (jRadioButtonEnglish.isSelected()) {
            jRadioButtonEnglish.setSelected(true);
        }
        changeLanguage(ENGLISH);
    }//GEN-LAST:event_jRadioButtonEnglishActionPerformed

    private void jRadioButtonSpanishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSpanishActionPerformed
        jRadioButtonEnglish.setSelected(false);
        if (jRadioButtonSpanish.isSelected()) {
            jRadioButtonSpanish.setSelected(true);
        }
        changeLanguage(SPANISH);
    }//GEN-LAST:event_jRadioButtonSpanishActionPerformed

    private void jButtonCurrentTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCurrentTimeActionPerformed
        LocalDateTime localDate = LocalDateTime.now();
        jTextFieldHour.setText(String.valueOf(localDate.getHour()));
        jTextFieldMinute.setText(String.valueOf(localDate.getMinute()));
    }//GEN-LAST:event_jButtonCurrentTimeActionPerformed

    //If the textBoxes hour/minute lost the focus, we check if the hour is correct
    private void jTextFieldMinuteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldMinuteFocusLost
        String minute = jTextFieldMinute.getText();
        boolean isInt = false;
        int newMinute;

        try {
            newMinute = Integer.parseInt(minute);
            isInt = true;

            if (!isInt || newMinute < 0 || newMinute > 59) {
                LocalDateTime localDate = LocalDateTime.now();
                jTextFieldMinute.setText(String.valueOf(localDate.getMinute()));
            }

        } catch (Exception e) {
            LocalDateTime localDate = LocalDateTime.now();
            jTextFieldMinute.setText(String.valueOf(localDate.getMinute()));
        }

    }//GEN-LAST:event_jTextFieldMinuteFocusLost

    //Cuando el cuadro gana el foco, añade el oyente que se activa al pulsar enter,
    //hace la misma acción que al perder el foco (comprobar si es entero y entra en el rango)
    private void jTextFieldMinuteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldMinuteFocusGained
        Action action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jTextFieldMinuteFocusLost(evt);
            }
        };
        jTextFieldMinute.addActionListener(action);
    }//GEN-LAST:event_jTextFieldMinuteFocusGained

    private void jTextFieldHourFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldHourFocusLost
        String hour = jTextFieldHour.getText();
        boolean isInt = false;
        int newHour;

        try {
            newHour = Integer.parseInt(hour);
            isInt = true;

            if (!isInt || newHour < 0 || newHour > 23) {
                LocalDateTime localDate = LocalDateTime.now();
                jTextFieldHour.setText(String.valueOf(localDate.getHour()));
            }

        } catch (Exception e) {
            LocalDateTime localDate = LocalDateTime.now();
            jTextFieldHour.setText(String.valueOf(localDate.getHour()));
        }
    }//GEN-LAST:event_jTextFieldHourFocusLost

    private void jTextFieldHourFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldHourFocusGained
        Action action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                jTextFieldHourFocusLost(evt);
            }
        };
        jTextFieldHour.addActionListener(action);
    }//GEN-LAST:event_jTextFieldHourFocusGained

    private void jButtonPlusOneMinuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlusOneMinuteActionPerformed
        int minute = Integer.parseInt(jTextFieldMinute.getText());

        if (minute == 59) {
            jTextFieldMinute.setText("0");
            int hour = Integer.parseInt(jTextFieldHour.getText());
            jTextFieldHour.setText(String.valueOf(hour + 1));
        } else {
            jTextFieldMinute.setText(String.valueOf(minute + 1));
        }


    }//GEN-LAST:event_jButtonPlusOneMinuteActionPerformed

    private void setJTexFieldChanged(JTextField txt) {
        DocumentListener documentListener = new DocumentListener() {

            @Override
            public void changedUpdate(DocumentEvent documentEvent) {
            }

            @Override
            public void insertUpdate(DocumentEvent documentEvent) {
                System.out.println("insertUpdate");
                SwingUtilities.invokeLater(() -> txtEjemploJTextFieldChanged(txt, this));
            }

            @Override
            public void removeUpdate(DocumentEvent documentEvent) {
            }
        };
        txt.getDocument().addDocumentListener(documentListener);

    }

    private void txtEjemploJTextFieldChanged(JTextField txt, DocumentListener documentListener) {

        txt.getDocument().removeDocumentListener(documentListener);

        String minuteString = jTextFieldMinute.getText();
        int minuteInt = -1;
        try {
            minuteInt = Integer.parseInt(minuteString);

        } catch (Exception e) {
        }
        if (minuteInt >= 0 && minuteInt <= 9) {
            minuteString = String.format("%02d", minuteInt);
            jTextFieldMinute.setText(minuteString);
        }

        txt.getDocument().addDocumentListener(documentListener);
    }


    private void jButtonLessOneMinuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLessOneMinuteActionPerformed
        int minute = Integer.parseInt(jTextFieldMinute.getText());
        if (minute == 0) {
            jTextFieldMinute.setText("59");
            int hour = Integer.parseInt(jTextFieldHour.getText());
            jTextFieldHour.setText(String.valueOf(hour - 1));
        } else {
            jTextFieldMinute.setText(String.valueOf(minute - 1));
        }
    }//GEN-LAST:event_jButtonLessOneMinuteActionPerformed

    private void jButtonLessOneHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLessOneHourActionPerformed
        int hour = Integer.parseInt(jTextFieldHour.getText());
        if (hour == 0) {
            jTextFieldHour.setText("23");
        } else {
            jTextFieldHour.setText(String.valueOf(hour - 1));
        }
    }//GEN-LAST:event_jButtonLessOneHourActionPerformed

    private void jButtonPlusOneHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlusOneHourActionPerformed
        int hour = Integer.parseInt(jTextFieldHour.getText());
        if (hour == 23) {
            jTextFieldHour.setText("0");
        } else {
            jTextFieldHour.setText(String.valueOf(hour + 1));
        }
    }//GEN-LAST:event_jButtonPlusOneHourActionPerformed

    private void jButtonPlus5MinutesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlus5MinutesActionPerformed
        int minute = Integer.parseInt(jTextFieldMinute.getText());
        int newMinute = minute + 5;
        if (newMinute > 59) {
            newMinute = newMinute - 60;
            jTextFieldMinute.setText(String.valueOf(newMinute));
            int hour = Integer.parseInt(jTextFieldHour.getText());
            jTextFieldHour.setText(String.valueOf(hour + 1));
        } else {
            jTextFieldMinute.setText(String.valueOf(newMinute));
        }
    }//GEN-LAST:event_jButtonPlus5MinutesActionPerformed

    private void jButtonPlus10MinutesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlus10MinutesActionPerformed
        int minute = Integer.parseInt(jTextFieldMinute.getText());
        int newMinute = minute + 10;
        if (newMinute > 59) {
            newMinute = newMinute - 60;
            jTextFieldMinute.setText(String.valueOf(newMinute));
            int hour = Integer.parseInt(jTextFieldHour.getText());
            jTextFieldHour.setText(String.valueOf(hour + 1));
        } else {
            jTextFieldMinute.setText(String.valueOf(newMinute));
        }
    }//GEN-LAST:event_jButtonPlus10MinutesActionPerformed

    private void jButtonShutdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShutdownActionPerformed

        forced = jCheckBoxForzar.isSelected();

        int hour = Integer.parseInt(jTextFieldHour.getText());
        int minute = Integer.parseInt(jTextFieldMinute.getText());
        long secondsRemaining = control.calculateSeconds(hour, minute);

        control.shutDown(secondsRemaining, forced);
        jTextFieldRemainingTime.setEnabled(true);
    }//GEN-LAST:event_jButtonShutdownActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed

        forced = jCheckBoxForzar.isSelected();

        int hour = Integer.parseInt(jTextFieldHour.getText());
        int minute = Integer.parseInt(jTextFieldMinute.getText());
        long secondsRemaining = control.calculateSeconds(hour, minute);

        control.reset(secondsRemaining, forced);
        jTextFieldRemainingTime.setEnabled(true);

    }//GEN-LAST:event_jButtonResetActionPerformed

    public void setTimer(String remainingTime) {
        jTextFieldRemainingTime.setText(remainingTime);
    }

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        control.cancelShutDown();
        jTextFieldRemainingTime.setEnabled(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

//                try {
//                    UIManager.setLookAndFeel(new HiFiLookAndFeel());
//                } catch (UnsupportedLookAndFeelException ex) {
//                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
//                }
                new NewJFrame().setVisible(true);
            }
        });
    }

    private void changeLanguage(String nameLanguage) {
        Language language = new Language(nameLanguage);

        this.setTitle(language.getProperty("titulo"));
        this.jLabelTitle.setText(language.getProperty("titulo"));
        this.jLabelHour.setText(language.getProperty("hora"));
        this.jLabelMinute.setText(language.getProperty("minuto"));
        this.jCheckBoxForzar.setText(language.getProperty("forzar"));
        this.jLabelRemainingTime.setText(language.getProperty("tiempo_restante"));
        this.jButtonCancel.setText(language.getProperty("cancelar"));
        this.jButtonShutdown.setText(language.getProperty("apagar"));
        this.jButtonReset.setText(language.getProperty("reiniciar"));
        this.jLabelLanguage.setText(language.getProperty("idioma"));
        this.jRadioButtonSpanish.setText(language.getProperty("espanol"));
        this.jRadioButtonEnglish.setText(language.getProperty("ingles"));
        this.jButtonCurrentTime.setText(language.getProperty("hora_actual"));

    }

    private final String ENGLISH = "english";
    private final String SPANISH = "spanish";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupLanguages;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonCurrentTime;
    private javax.swing.JButton jButtonLessOneHour;
    private javax.swing.JButton jButtonLessOneMinute;
    private javax.swing.JButton jButtonPlus10Minutes;
    private javax.swing.JButton jButtonPlus5Minutes;
    private javax.swing.JButton jButtonPlusOneHour;
    private javax.swing.JButton jButtonPlusOneMinute;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonShutdown;
    private javax.swing.JCheckBox jCheckBoxForzar;
    private javax.swing.JLabel jLabelHour;
    private javax.swing.JLabel jLabelLanguage;
    private javax.swing.JLabel jLabelMinute;
    private javax.swing.JLabel jLabelRemainingTime;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelLanguage;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JPanel jPanelTimeNow;
    private javax.swing.JPanel jPanelTitle;
    private javax.swing.JRadioButton jRadioButtonEnglish;
    private javax.swing.JRadioButton jRadioButtonSpanish;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldHour;
    private javax.swing.JTextField jTextFieldMinute;
    private javax.swing.JTextField jTextFieldRemainingTime;
    // End of variables declaration//GEN-END:variables
}
